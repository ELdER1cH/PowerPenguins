plugins {
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.12'
}


mainClassName = 'client/Java/PinguPinguEat'
group = 'PinguPinguEat'
version = '0x.0.0'
sourceCompatibility = '17'
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

repositories {
    mavenCentral()
}

configurations {
    serverImplementation.extendsFrom(implementation)
    clientImplementation.extendsFrom(implementation)
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'table:table:0.5.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

javafx {
    version = "17.0.2"
    modules = [ 'javafx.base', 'javafx.controls', 'javafx.fxml', 'javafx.media'  ]
    configuration = 'clientImplementation'
}




sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
    test {
        java {
            srcDir 'src/test/java'
        }
        resources {
            'src/test/resources'
        }
    }
    client{
        java{
            srcDir 'src/client/Java'
        }
        resources{
            srcDir 'src/client/resources'
        }
    }
    server{
        java {
            srcDir 'src/server/java'
        }
        resources {
            srcDir 'src/server/resources'
        }
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

processClientResources{
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

test {
    defaultCharacterEncoding = 'UTF-8'
    useJUnitPlatform()
}
